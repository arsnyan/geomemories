//
//  HomeRouter.swift
//  GeoMemories
//
//  Created by Арсен Саруханян on 18.08.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeRoutingLogic {
    func routeToCreateEditEntry(geoEntry: GeoEntry?)
}

protocol HomeDataPassing {
    var dataStore: HomeDataStore? { get }
}

@MainActor
class HomeRouter: NSObject, HomeRoutingLogic, HomeDataPassing {
    weak var viewController: HomeViewController?
    var dataStore: HomeDataStore?
    
    func routeToCreateEditEntry(geoEntry: GeoEntry?) {
        let destinationVC = CreateEditEntryViewController()
        
        CreateEditEntryConfigurator.shared.configure(with: destinationVC)
        
        var destinationDS = destinationVC.router!.dataStore!
        
        passDataToCreateEditEntry(source: dataStore!, destination: &destinationDS, entry: geoEntry)
        
        navigateToCreateEditEntry(source: viewController!, destination: destinationVC)
    }
    
    private func passDataToCreateEditEntry(
        source: HomeDataStore,
        destination: inout CreateEditEntryDataStore,
        entry: GeoEntry?
    ) {
        destination.entry = entry
    }
    
    func navigateToCreateEditEntry(
        source: HomeViewController,
        destination: CreateEditEntryViewController
    ) {
        let navigationController = UINavigationController(rootViewController: destination)
        if let sheet = navigationController.sheetPresentationController {
            sheet.detents = [.large()]
            sheet.largestUndimmedDetentIdentifier = .medium
            sheet.prefersGrabberVisible = true
            sheet.prefersScrollingExpandsWhenScrolledToEdge = true
            sheet.prefersEdgeAttachedInCompactHeight = true
            sheet.widthFollowsPreferredContentSizeWhenEdgeAttached = true
            navigationController.isModalInPresentation = true
        }
        source.navigationController?.present(navigationController, animated: true)
    }
}
