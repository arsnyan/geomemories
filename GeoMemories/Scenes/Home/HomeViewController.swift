//
//  HomeViewController.swift
//  GeoMemories
//
//  Created by Арсен Саруханян on 18.08.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SnapKit
import MapKit

protocol HomeDisplayLogic: AnyObject {
    func displayAlert(viewModel: Home.ShowAlert.ViewModel)
    func displayCurrentLocation(viewModel: Home.SelectCurrentLocation.ViewModel)
    func displayLoadingIndicator()
    func stopLoadingIndicator()
}

class HomeViewController: UIViewController {
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
    
    private let mapView: MKMapView = {
        let map = MKMapView()
        map.showsUserLocation = true
        return map
    }()
    
    private lazy var activityIndicator: UIActivityIndicatorView = {
        let indicator = UIActivityIndicatorView(style: .large)
        indicator.hidesWhenStopped = true
        indicator.center = view.center
        return indicator
    }()
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        toolbarItems = [
            .flexibleSpace(),
            UIBarButtonItem(
                image: UIImage(systemName: "location.fill"),
                style: .plain,
                target: self,
                action: #selector(selectCurrentLocation)
            )
        ]
        navigationController?.setToolbarHidden(false, animated: false)
        
        view.addSubview(mapView)
        mapView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    @objc private func selectCurrentLocation() {
        interactor?.provideCurrentLocation(request: Home.SelectCurrentLocation.Request())
    }
}

extension HomeViewController: HomeDisplayLogic {
    func displayAlert(viewModel: Home.ShowAlert.ViewModel) {
        let alertController = UIAlertController(
            title: viewModel.title,
            message: viewModel.message,
            preferredStyle: .alert
        )
        alertController.addAction(
            UIAlertAction(
                title: String(localized: "ok"),
                style: .default
            )
        )
        present(alertController, animated: true)
    }
    
    func displayCurrentLocation(viewModel: Home.SelectCurrentLocation.ViewModel) {
        mapView.setRegion(
            MKCoordinateRegion(
                center: viewModel.locationCenter,
                latitudinalMeters: viewModel.areaRadius,
                longitudinalMeters: viewModel.areaRadius
            ),
            animated: true
        )
    }
    
    func displayLoadingIndicator() {
        activityIndicator.startAnimating()
    }
    
    func stopLoadingIndicator() {
        activityIndicator.stopAnimating()
    }
}
